// Copyright (c) diva-e NEXT GmbH. All rights reserved.
// Licensed under the MIT License.

@testable import DVESecurity
import CommonCrypto
import Nimble
import XCTest

class SHA384Tests: HashingTests {
    private lazy var data = "Hello World!".data(using: .utf8)!
    private let dataHash: [UInt8] = [0xBF, 0xD7, 0x6C, 0x0E, 0xBB, 0xD0, 0x06, 0xFE,
                                     0xE5, 0x83, 0x41, 0x05, 0x47, 0xC1, 0x88, 0x7B,
                                     0x02, 0x92, 0xBE, 0x76, 0xD5, 0x82, 0xD9, 0x6C,
                                     0x24, 0x2D, 0x2A, 0x79, 0x27, 0x23, 0xE3, 0xFD,
                                     0x6F, 0xD0, 0x61, 0xF9, 0xD5, 0xCF, 0xD1, 0x3B,
                                     0x8F, 0x96, 0x13, 0x58, 0xE6, 0xAD, 0xBA, 0x4A]
    private lazy var testFileURL = Bundle.main.url(forResource: "test", withExtension: "dat")!
    private let testFileHash: [UInt8] = [0x31, 0x17, 0x1A, 0x9D, 0x87, 0x3A, 0x8C, 0x0B,
                                         0x3D, 0xAF, 0x85, 0xFB, 0x91, 0xDF, 0xA7, 0x73,
                                         0x6C, 0xF7, 0xD1, 0xE5, 0x0F, 0xDF, 0xEE, 0x39,
                                         0x36, 0x96, 0x91, 0x97, 0xD2, 0x7E, 0x76, 0xEE,
                                         0x87, 0x51, 0x1E, 0x1C, 0xA1, 0x78, 0x8E, 0x9B,
                                         0x88, 0x73, 0xDE, 0xCB, 0x9E, 0x9A, 0x6D, 0x0D]

    func testSHA384() {
        expect(Hashing.SHA384.blockByteCount) == Int(CC_SHA384_BLOCK_BYTES)

        performHashTest(for: Hashing.SHA384.self, data: data, expectedHash: Data(dataHash))
    }

    func testSHA384IncrementalHash() throws {
        try performIncrementalHashTest(for: Hashing.SHA384.self, fileURL: testFileURL, expectedHash: Data(testFileHash))
    }
}
