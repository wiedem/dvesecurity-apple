// Copyright (c) diva-e NEXT GmbH. All rights reserved.
// Licensed under the MIT License.

@testable import DVESecurity
import CommonCrypto
import Nimble
import XCTest

final class SHA512Tests: HashingTests {
    private lazy var data = "Hello World!".data(using: .utf8)!
    private let dataHash: [UInt8] = [0x86, 0x18, 0x44, 0xD6, 0x70, 0x4E, 0x85, 0x73,
                                     0xFE, 0xC3, 0x4D, 0x96, 0x7E, 0x20, 0xBC, 0xFE,
                                     0xF3, 0xD4, 0x24, 0xCF, 0x48, 0xBE, 0x04, 0xE6,
                                     0xDC, 0x08, 0xF2, 0xBD, 0x58, 0xC7, 0x29, 0x74,
                                     0x33, 0x71, 0x01, 0x5E, 0xAD, 0x89, 0x1C, 0xC3,
                                     0xCF, 0x1C, 0x9D, 0x34, 0xB4, 0x92, 0x64, 0xB5,
                                     0x10, 0x75, 0x1B, 0x1F, 0xF9, 0xE5, 0x37, 0x93,
                                     0x7B, 0xC4, 0x6B, 0x5D, 0x6F, 0xF4, 0xEC, 0xC8]
    private lazy var testFileURL = Bundle.main.url(forResource: "test", withExtension: "dat")!
    private let testFileHash: [UInt8] = [0x4D, 0xA8, 0xEA, 0xE7, 0xE8, 0x71, 0x43, 0xC2,
                                         0xD1, 0x48, 0xD5, 0x82, 0x3A, 0xC2, 0x9D, 0x1D,
                                         0x26, 0x41, 0x2B, 0x90, 0x45, 0xAF, 0x0B, 0xDA,
                                         0xEA, 0x40, 0x42, 0x6C, 0xB3, 0xEE, 0x24, 0x31,
                                         0xC9, 0x80, 0x7F, 0x94, 0xB8, 0x7A, 0x9E, 0x8C,
                                         0xC0, 0x6C, 0x07, 0x72, 0xD7, 0xFF, 0x6F, 0x94,
                                         0xBA, 0xD1, 0x41, 0x11, 0xA9, 0x6F, 0x4C, 0x89,
                                         0xFD, 0xB6, 0x2E, 0xCF, 0xCE, 0xBD, 0x11, 0xCF]

    func testSHA512() {
        expect(Hashing.SHA512.blockByteCount) == Int(CC_SHA512_BLOCK_BYTES)

        performHashTest(for: Hashing.SHA512.self, data: data, expectedHash: Data(dataHash))
    }

    func testSHA512IncrementalHash() throws {
        try performIncrementalHashTest(for: Hashing.SHA512.self, fileURL: testFileURL, expectedHash: Data(testFileHash))
    }
}
